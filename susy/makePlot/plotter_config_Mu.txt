# starting adding MC bkg
vvPlotters=[]
vvSamples = [['step1p5_WW',110.8],['step1p5_WZ',47.13],['step1p5_ZZ',16.523]]
for sample in vvSamples:
     vvPlotters.append(TreePlotter(sample[0], indir+'/'+sample[0]+'.root',tree))
     vvPlotters[-1].addCorrectionFactor('1./BgenWeightTotalEventsNumber','norm')
     vvPlotters[-1].addCorrectionFactor(sample[1],'xsec')
     vvPlotters[-1].addCorrectionFactor('BgenWeight','genWeight')
     vvPlotters[-1].addCorrectionFactor("BpileupWeight",'puWeight')
#     vvPlotters[-1].addCorrectionFactor("BbtagWeight",'btagWeight')
     vvPlotters[-1].addCorrectionFactor("BmuWeight",'lepsf')
     allPlotters[sample[0]] = vvPlotters[-1]
VV = MergedPlotter(vvPlotters)
VV.setFillProperties(1001,ROOT.kCyan-3)

# wgPlotters=[]
# wgSamples = [['step1p5_WGToLNuG',405.271]]
# for sample in wgSamples:
#     wgPlotters.append(TreePlotter(sample[0], indir+'/'+sample[0]+'.root',tree))
#     wgPlotters[-1].addCorrectionFactor(sample[1],'xsec')
#     wgPlotters[-1].addCorrectionFactor('BgenWeight','genWeight')
#     wgPlotters[-1].addCorrectionFactor('1./BgenWeightTotalEventsNumber','norm')
#     wgPlotters[-1].addCorrectionFactor("BpileupWeight",'puWeight')
# #    wgPlotters[-1].addCorrectionFactor("BbtagWeight",'btagWeight')
#     wgPlotters[-1].addCorrectionFactor("BmuWeight", 'lepsf')
#     allPlotters[sample[0]] = wgPlotters[-1]
# WG = MergedPlotter(wgPlotters)
# WG.setFillProperties(1001,ROOT.kMagenta)

# zgPlotters=[]
# zgSamples = [['step1p5_ZGTo2LG',117.864]]
# for sample in zgSamples:
#     zgPlotters.append(TreePlotter(sample[0], indir+'/'+sample[0]+'.root',tree))
#     zgPlotters[-1].addCorrectionFactor(sample[1],'xsec')
#     zgPlotters[-1].addCorrectionFactor('BgenWeight','genWeight')
#     zgPlotters[-1].addCorrectionFactor('1./BgenWeightTotalEventsNumber','norm')
#     zgPlotters[-1].addCorrectionFactor("BpileupWeight",'puWeight')
# #    zgPlotters[-1].addCorrectionFactor("BbtagWeight",'btagWeight')
#     zgPlotters[-1].addCorrectionFactor("BmuWeight", 'lepsf')
#     allPlotters[sample[0]] = zgPlotters[-1]
# ZG = MergedPlotter(zgPlotters)
# ZG.setFillProperties(1001,ROOT.kMagenta)

vgPlotters=[]
vgSamples = [['step1p5_WGToLNuG',405.271],['step1p5_ZGTo2LG',117.864]]
for sample in vgSamples:
    vgPlotters.append(TreePlotter(sample[0], indir+'/'+sample[0]+'.root',tree))
    vgPlotters[-1].addCorrectionFactor(sample[1],'xsec')
    vgPlotters[-1].addCorrectionFactor('BgenWeight','genWeight')
    vgPlotters[-1].addCorrectionFactor('1./BgenWeightTotalEventsNumber','norm')
    vgPlotters[-1].addCorrectionFactor("BpileupWeight",'puWeight')
    vgPlotters[-1].addCorrectionFactor("BmuWeight", 'lepsf')
    allPlotters[sample[0]] = vgPlotters[-1]
VG = MergedPlotter(vgPlotters)
VG.setFillProperties(1001,ROOT.kMagenta)


wjetsPlotters=[]
wjetsSamples = [['step1p5_W3JetsToLNu',1160],['step1p5_W4JetsToLNu',600]]
#wjetsSamples = [['step1p5_W4JetsToLNu',600]]
for sample in wjetsSamples:
    wjetsPlotters.append(TreePlotter(sample[0], indir+'/'+sample[0]+'.root',tree))
    wjetsPlotters[-1].addCorrectionFactor('1./BgenWeightTotalEventsNumber','norm')
    wjetsPlotters[-1].addCorrectionFactor(sample[1],'xsec')
    wjetsPlotters[-1].addCorrectionFactor('BgenWeight','genWeight')
    wjetsPlotters[-1].addCorrectionFactor("BpileupWeight",'puWeight')
    wjetsPlotters[-1].addCorrectionFactor("BmuWeight",'lepsf')
    wjetsPlotters[-1].addCorrectionFactor(SF_wjets,'kfactor')
    allPlotters[sample[0]] = wjetsPlotters[-1]
WJets = MergedPlotter(wjetsPlotters)
WJets.setFillProperties(1001,ROOT.kBlue-6)

zjetsPlotters=[]
zjetsSamples = ['step1p5_DYJetsToLL']
for sample in zjetsSamples:
    zjetsPlotters.append(TreePlotter(sample, indir+'/'+sample+'.root',tree))
    zjetsPlotters[-1].addCorrectionFactor('1./BgenWeightTotalEventsNumber','norm')
    zjetsPlotters[-1].addCorrectionFactor(6025.2,'xsec')
    zjetsPlotters[-1].addCorrectionFactor('BgenWeight','genWeight')
    zjetsPlotters[-1].addCorrectionFactor("BpileupWeight",'puWeight')
#    zjetsPlotters[-1].addCorrectionFactor("BbtagWeight",'btagWeight')
    zjetsPlotters[-1].addCorrectionFactor("BmuWeight",'lepsf')
    allPlotters[sample] = zjetsPlotters[-1] 
ZJets = MergedPlotter(zjetsPlotters)
ZJets.setFillProperties(1001,ROOT.kOrange+7)


ttPlotters=[]
ttSamples = ['step1p5_TT']
for sample in ttSamples:
    ttPlotters.append(TreePlotter(sample, indir+'/'+sample+'.root',tree))
    ttPlotters[-1].addCorrectionFactor('1./BgenWeightTotalEventsNumber','norm')
    ttPlotters[-1].addCorrectionFactor(831.76,'xsec')
    ttPlotters[-1].addCorrectionFactor('BgenWeight','genWeight')
    ttPlotters[-1].addCorrectionFactor("BpileupWeight",'puWeight')
#    ttPlotters[-1].addCorrectionFactor("BbtagWeight",'btagWeight')
    ttPlotters[-1].addCorrectionFactor("BmuWeight",'lepsf')
    ttPlotters[-1].addCorrectionFactor("BtopPtWeight",'ttreweight')
    ttPlotters[-1].addCorrectionFactor(SF_tt,'tt_kfactor')
    allPlotters[sample] = ttPlotters[-1]
TT = MergedPlotter(ttPlotters)
TT.setFillProperties(1001,ROOT.kAzure-9)

ttgPlotters=[]
ttgSamples = ['step1p5_TTGJets']
for sample in ttgSamples:
    ttgPlotters.append(TreePlotter(sample, indir+'/'+sample+'.root',tree))
    ttgPlotters[-1].addCorrectionFactor('1./BgenWeightTotalEventsNumber','norm')
    ttgPlotters[-1].addCorrectionFactor(3.697,'xsec')
    ttgPlotters[-1].addCorrectionFactor('BgenWeight','genWeight')
    ttgPlotters[-1].addCorrectionFactor("BpileupWeight",'puWeight')
#    ttgPlotters[-1].addCorrectionFactor("BbtagWeight",'btagWeight')
    ttgPlotters[-1].addCorrectionFactor("BmuWeight",'lepsf')
    ttgPlotters[-1].addCorrectionFactor("BtopPtWeight",'ttreweight')
    allPlotters[sample] = ttgPlotters[-1]

TTG = MergedPlotter(ttgPlotters)
TTG.setFillProperties(1001,ROOT.kGreen-3)


ttvPlotters=[]
ttvSamples = [['step1p5_TTWJetsToLNu',0.2043],['step1p5_TTWJetsToQQ',0.4062],['step1p5_TTZToLLNuNu',0.2529],['step1p5_TTZToQQ',0.5297]]
for sample in ttvSamples:
    ttvPlotters.append(TreePlotter(sample[0], indir+'/'+sample[0]+'.root',tree))
    ttvPlotters[-1].addCorrectionFactor(sample[1],'xsec')
    ttvPlotters[-1].addCorrectionFactor('BgenWeight','genWeight')
    ttvPlotters[-1].addCorrectionFactor('1./BgenWeightTotalEventsNumber','norm')
    ttvPlotters[-1].addCorrectionFactor("BpileupWeight",'puWeight')
#    ttvPlotters[-1].addCorrectionFactor("BbtagWeight",'btagWeight')
    ttvPlotters[-1].addCorrectionFactor("BmuWeight", 'lepsf')
    ttvPlotters[-1].addCorrectionFactor("BtopPtWeight",'ttreweight')
    allPlotters[sample[0]] = ttvPlotters[-1]
TTV = MergedPlotter(ttvPlotters)
TTV.setFillProperties(1001,ROOT.kYellow)

stPlotters=[]
stSamples = [['step1p5_ST_tW_antitop_5f_inclusiveDecays',35.85],['step1p5_ST_tW_top_5f_inclusiveDecays',35.85],['step1p5_ST_s-channel_4f_leptonDecays',3.36],['step1p5_ST_t-channel_top_4f_inclusiveDecays',136.02],['step1p5_ST_t-channel_antitop_4f_inclusiveDecays',80.95]]
for sample in stSamples:
    stPlotters.append(TreePlotter(sample[0], indir+'/'+sample[0]+'.root',tree))
    stPlotters[-1].addCorrectionFactor(sample[1],'xsec')
    stPlotters[-1].addCorrectionFactor('BgenWeight','genWeight')
    stPlotters[-1].addCorrectionFactor('1./BgenWeightTotalEventsNumber','norm')
    stPlotters[-1].addCorrectionFactor("BpileupWeight",'puWeight')
#    stPlotters[-1].addCorrectionFactor("BbtagWeight",'btagWeight')
    stPlotters[-1].addCorrectionFactor("BmuWeight", 'lepsf')
    allPlotters[sample[0]] = stPlotters[-1]
ST = MergedPlotter(stPlotters)
ST.setFillProperties(1001,ROOT.kRed-10)
# Adding MC bkg ends here

# start Adding QCD here#################
qcdPlotters=[]
#qcdSamples = [['step1_SingleMu_Run2016B_FebReminiAOD'],['step1_SingleMu_Run2016C_FebReminiAOD'],['step1_SingleMu_Run2016D_FebReminiAOD'],['step1_SingleMu_Run2016E_FebReminiAOD'],['step1_SingleMu_Run2016F_FebReminiAOD1'],['step1_SingleMu_Run2016F_FebReminiAOD2'],['step1_SingleMu_Run2016G_FebReminiAOD'],['step1_SingleMu_Run2016H_FebReminiAODv2'],['step1_SingleMu_Run2016H_FebReminiAODv3'],['step1p5_WW',110.8],['step1p5_WZ',47.13],['step1p5_ZZ',16.523],['step1p5_WGToLNuG',405.271],['step1p5_ZGTo2LG',117.864],['step1p5_W4JetsToLNu',600],['step1p5_W3JetsToLNu',1160],['step1p5_TTGJets',3.697],['step1p5_DYJetsToLL',6025.2],['step1p5_TT',831.76],['step1p5_TTWJetsToLNu',0.2043],['step1p5_TTWJetsToQQ',0.4062],['step1p5_TTZToLLNuNu',0.2529],['step1p5_TTZToQQ',0.5297],['step1p5_ST_tW_antitop_5f_inclusiveDecays',35.85],['step1p5_ST_tW_top_5f_inclusiveDecays',35.85],['step1p5_ST_s-channel_4f_leptonDecays',3.36],['step1p5_ST_t-channel_top_4f_inclusiveDecays',136.02],['step1p5_ST_t-channel_antitop_4f_inclusiveDecays',80.95]]
qcdSamples = [['step1_SingleMu_Run2016B_FebReminiAOD'],['step1_SingleMu_Run2016C_FebReminiAOD'],['step1_SingleMu_Run2016D_FebReminiAOD'],['step1_SingleMu_Run2016E_FebReminiAOD'],['step1_SingleMu_Run2016F_FebReminiAOD1'],['step1_SingleMu_Run2016F_FebReminiAOD2'],['step1_SingleMu_Run2016G_FebReminiAOD'],['step1_SingleMu_Run2016H_FebReminiAODv2'],['step1_SingleMu_Run2016H_FebReminiAODv3']]

for sample in qcdSamples:
    qcdPlotters.append(TreePlotter(sample[0], indir+'/'+sample[0]+'.root',treeQCD))
    if len(sample)==1: 
         qcdPlotters[-1].addCorrectionFactor(1./(lumi*1000),'lumi')
         qcdPlotters[-1].setAlias("BphoWeight","(1*1.)")
         qcdPlotters[-1].setAlias("BgenWeight","(1*1.)")
         qcdPlotters[-1].setAlias("BCandphoGenmatch","(1*1.)")
         qcdPlotters[-1].setAlias("BCandphoGenmatch","(1*1.)")
         qcdPlotters[-1].setAlias("BbtagWeight","(1*1.)")  
    if len(sample)>1:
         qcdPlotters[-1].addCorrectionFactor(sample[1],'xsec')
         qcdPlotters[-1].addCorrectionFactor('BgenWeight','genWeight')
         qcdPlotters[-1].addCorrectionFactor('-1./BgenWeightTotalEventsNumber','norm')
         qcdPlotters[-1].addCorrectionFactor("BpileupWeight",'puWeight')
    #    qcdPlotters[-1].addCorrectionFactor("BbtagWeight",'btagWeight')
    qcdPlotters[-1].addCorrectionFactor(SF_QCD,'kfactor')
    allPlotters[sample[0]] = qcdPlotters[-1]
QCD = MergedPlotter(qcdPlotters)
QCD.setFillProperties(1001,ROOT.kRed)



# End Adding QCD here#################

# Starting adding data
dataPlotters=[]
dataSamples = [
'step1_SingleMu_Run2016B_FebReminiAOD',
'step1_SingleMu_Run2016C_FebReminiAOD',
'step1_SingleMu_Run2016D_FebReminiAOD',
'step1_SingleMu_Run2016E_FebReminiAOD',
'step1_SingleMu_Run2016F_FebReminiAOD1',
'step1_SingleMu_Run2016F_FebReminiAOD2',
'step1_SingleMu_Run2016G_FebReminiAOD',
'step1_SingleMu_Run2016H_FebReminiAODv2',
'step1_SingleMu_Run2016H_FebReminiAODv3'
]
for sample in dataSamples:
    dataPlotters.append(TreePlotter(sample, indir+'/'+sample+'.root',tree))
#    dataPlotters[-1].addCorrectionFactor(2.1,'test')
Data = MergedPlotter(dataPlotters)

Data.setAlias("BgenWeight","1.*1")
Data.setAlias("BphoWeight","1.*1")
Data.setAlias("BphoWeightErr","1.*0")
Data.setAlias("BCandphoGenmatch","1.*0")
Data.setAlias("BtopPtWeight","1.*1")
Data.setAlias("BbtagWeight","1.*1") 
Data.setAlias("BbtagWeightUp","1.*1") 
Data.setAlias("BbtagWeightDown","1.*1")
Data.setAlias("BmuWeightErr","1.*0")
Data.setAlias("BpfMeT1JESUp","BpfMET")
Data.setAlias("BpfMeT1JESDo","BpfMET")
