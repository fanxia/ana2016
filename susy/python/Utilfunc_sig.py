# include utility functions
# special for fastsim signal mc
# has the function for bino like neutralino's branching ratios!!
import os
import sys
import ROOT
import math


def Fun_pileupweight_fastsim(truepu):

    pileuplist=[0.36607728367112397, 0.893925224429129, 1.1977164711293022, 0.9626995126421471, 1.1209761161608771, 1.164859138495215, 0.7955992069782198, 0.49582436388980267, 0.7421820181560131, 0.8788562011257953, 0.9642318178900664, 1.0724989149422395, 1.1253355687662896, 1.1760272210091784, 1.2020826475636825, 1.2076435646538353, 1.2001763306015454, 1.1826818134820003, 1.1439985554442524, 1.0966325099375585, 1.0656023419000509, 1.0511664066705138, 1.0515997504290857, 1.0506303621694364, 1.0498618047566595, 1.0581729089685616, 1.0721551494002155, 1.083029806486924, 1.0956935452522283, 1.107870839003214, 1.0946211207988656, 1.0826197557764918, 1.04124703311932, 0.9857518332210599, 0.910807479609711, 0.8209225782064177, 0.7167870987003486, 0.6100130736543593, 0.503118192256282, 0.4048414744758991, 0.30919531102329884, 0.2279203149583453, 0.16368974737145012, 0.11317989130853941, 0.07730047708806811, 0.0509220818594168, 0.031893565774466566, 0.020093554222709423, 0.012263091535772767, 0.007426461028558469, 0.00438028012095721, 0.0026077681562074752, 0.0015659946918537924, 0.0009713583046727934, 0.0007292056402946547, 0.0006727091108798432, 0.0007304586969373182, 0.0009487909835455563, 0.0013553331212479232, 0.0018941913968854134, 0.003082438877965567, 0.00409665052535598, 0.004874493533860768, 0.005256059659392086, 0.005784980601288857, 0.005514678617763402, 0.0050004571391072585, 0.004409828175951356, 0.004012243389524247, 0.0035475435966838345, 0.0031075066784920346, 0.0027021093405185615, 0.002336914444157967, 0.0020252898809134164, 0.0017232814390099108, 0.0, 0.0, 0.0, 0.0, 0.0]


    return pileuplist[int(truepu)]



def Fun_SigFindGen(tree):
    resultstop=[]
    resultnlsp=[]
    ngamma=0
    for genp in range(tree.nMC):
        #-------find nlsp mass
        if tree.mcPID[genp]==1000022 and (tree.mcStatusFlag[genp]&4)==4 and tree.mcMomPID[genp]==1000023:
            resultnlsp.append(tree.mcMomMass[genp])
        #-------find stop mass
        if abs( tree.mcPID[genp])==1000006 and (tree.mcStatusFlag[genp]&4)==4:
            resultstop.append(tree.mcMass[genp])
        #-------find how many final photon, to determin decay modes
        if tree.mcPID[genp]==22 and (tree.mcStatusFlag[genp]&4)==4 and tree.mcMomPID[genp]==1000023:
            ngamma+=1

    return [resultstop,resultnlsp,ngamma]


#pdg2016
sw2=0.23129
cw2=1-sw2
mZ=91.1876

def Fun_SigNLSPBR(mass,decaymode):
    # will get the br:NLSP->photon+G~, and get the event weight according to the decay mode(gg,Zg,ZZ)
    if (mass<mZ): br=1.0
    else:br= cw2/(cw2+sw2*(1.-mZ**2/mass**2)**4)

    if decaymode==99:  # gg
        brweight=(br)**2/0.25
    elif decaymode==29: #Zg
        brweight=2*(br)*(1.0-br)/0.5
    elif decaymode==22: #ZZ
        brweight=(1-br)**2/0.25
    else: brweight=0.0

    return [br,brweight]
